unit uWebModule;

interface

uses
  System.SysUtils, System.Classes, Web.HTTPApp, Datasnap.DSHTTPCommon,
  Datasnap.DSHTTPWebBroker, Datasnap.DSServer,
  Web.WebFileDispatcher, Web.HTTPProd,
  DataSnap.DSAuth,
  Datasnap.DSProxyJavaScript, IPPeerServer, Datasnap.DSMetadata,
  Datasnap.DSServerMetadata, Datasnap.DSClientMetadata, Datasnap.DSCommonServer,
  Datasnap.DSHTTP;

type
  TWebModule1 = class(TWebModule)
    DSHTTPWebDispatcher1: TDSHTTPWebDispatcher;
    DSServer1: TDSServer;
    procedure WebModule1DefaultHandlerAction(Sender: TObject;
      Request: TWebRequest; Response: TWebResponse; var Handled: Boolean);
    procedure DSServer1Disconnect(DSConnectEventObject: TDSConnectEventObject);
    procedure DSServerBaseCadastroGetClass(DSServerClass: TDSServerClass;
      var PersistentClass: TPersistentClass);
    procedure DSServerBaseConsultaGetClass(DSServerClass: TDSServerClass;
      var PersistentClass: TPersistentClass);
    procedure WebModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure RegistrarClasses;

  end;

var
  WebModuleClass: TComponentClass = TWebModule1;

implementation


{$R *.dfm}

uses Web.WebReq,  uManagerSession, udmBase,
  udmbasecadastro, udmBaseConsulta, uComponentsDataSnap, udmCadPedidoVenda;

procedure TWebModule1.DSServerBaseCadastroGetClass(DSServerClass: TDSServerClass;
  var PersistentClass: TPersistentClass);
begin
  PersistentClass := udmbasecadastro.TdmBaseCadastro;
end;

procedure TWebModule1.DSServerBaseConsultaGetClass(
  DSServerClass: TDSServerClass; var PersistentClass: TPersistentClass);
begin
  PersistentClass := TdmBaseConsulta;
end;


procedure TWebModule1.RegistrarClasses;

  procedure AddServerClass(_AClass: TPersistentClass; _ALifeCycle: string);
  var
    AServerClass: TDSServidorClass;
  begin
    AServerClass := TDSServidorClass.Create(Self);
    AServerClass.LifeCycle := _ALifeCycle;
    AServerClass.Server := DSServer1;
    AServerClass.ClassDisp := _AClass;
  end;

begin
//Adicionar aqui o novo DM
  AddServerClass(TDMBase, 'Invocation');
  AddServerClass(TdmBaseCadastro, 'Invocation');
  AddServerClass(TdmBaseConsulta, 'Invocation');
  AddServerClass(TdmCadPedidoVenda, 'Invocation');
end;

procedure TWebModule1.WebModule1DefaultHandlerAction(Sender: TObject;
  Request: TWebRequest; Response: TWebResponse; var Handled: Boolean);
begin
  Response.Content :=
    '<html>' +
    '<head><title>DataSnap Server</title></head>' +
    '<body>DataSnap Server</body>' +
    '</html>';
end;

procedure TWebModule1.WebModuleCreate(Sender: TObject);
begin
  DSServer1.Stop;
  RegistrarClasses;
  DSServer1.Start;
end;

procedure TWebModule1.DSServer1Disconnect(
  DSConnectEventObject: TDSConnectEventObject);
begin
  TConnectionManager.RemoveDMConexao;
end;



initialization
finalization
  Web.WebReq.FreeWebModules;

end.

